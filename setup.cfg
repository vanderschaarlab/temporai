# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = temporai
description = TemporAI: ML-centric Toolkit for Medical Time Series
author = Evgeny Saveliev
author_email = e.s.saveliev@gmail.com
license = Apache-2.0 license
license_files = LICENSE.txt
long_description = file: pypi.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/vanderschaarlab/temporai
# Add here related links, for example:
project_urls =
    Documentation = https://temporai.readthedocs.io/en/latest/
    Source = https://github.com/vanderschaarlab/temporai
    Changelog = https://github.com/vanderschaarlab/temporai/releases
    Tracker = https://github.com/vanderschaarlab/temporai/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Healthcare Industry
    Intended Audience :: Science/Research
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Topic :: Software Development :: Libraries


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.7

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    clairvoyance2 >=0.0.2
    cloudpickle
    geomloss>=0.2.6
    hydra-core >=1.3
    hyperimpute >= 0.1.17
    importlib-metadata; python_version<"3.8"
    # joblib has a bug with py37 & Windows: https://github.com/joblib/loky/issues/411
    # Hence limit to joblib < 1.3.0 for py37 & Windows, otherwise use latest.
    joblib; python_version!="3.7" or platform_system!="Windows"
    joblib < 1.3.0; python_version=="3.7" and platform_system=="Windows"
    # lifelines v0.27.5 has py37 bug: https://github.com/CamDavidsonPilon/lifelines/issues/1517
    lifelines != 0.27.5
    loguru
    numpy >=1
    optuna >= 2.8.0
    packaging
    pandas >= 1
    pandera >= 0.17.0
    pydantic >= 2
    rich
    scikit-learn >= 1.0
    scipy
    seaborn
    torch
    torchcde
    torchdiffeq
    torchlaplace >= 0.0.4
    tsai
    typing-extensions >= 4.7.1
    xgbse


[options.packages.find]
where = src
exclude =
    tests
    .dev

[options.package_data]
tempor =
    **/*.yaml

[options.extras_require]
# Add here additional requirements for extra features.

# Requirements for generating project docs.
docs =
    # black[jupyter] included for blacken-docs.
    black[jupyter]
    blacken-docs
    # jupyter included for notebook tutorials.
    jupyter
    myst-parser
    nbsphinx
    # pyscaffold & pyscaffoldext-markdown included as docs were created with pyscaffoldext-markdown.
    pyscaffold
    pyscaffoldext-markdown >= 0.5
    # Sphinx & related:
    sphinx >=5, !=5.1.0  # Bug in version 5.1.0.
    sphinx-immaterial

# Requirements for project testing.
testing =
    %(docs)s
    pre-commit
    pytest
    pytest-cov
    pytest-xdist

# Requirements for project development.
dev =
    %(testing)s
    build
    flake8
    isort
    mypy >= 1.0.0
    pylint
    pydoclint
    pydocstyle
    setuptools
    setuptools-scm
    tox
    twine

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = tempor.module:function
# For example:
# console_scripts =
#     fibonacci = tempor.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker `flake8`.
max_line_length = 120
select = C,E,F,W,B,B950,DOC
extend_ignore = E203, E501, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
#    Additionally updated from:
#    https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#line-length
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
    .dev
# `pydoclint` config (as `flake8` extension):
style = google
allow_init_docstring = True
skip_checking_raises = True

# `pylint` compatibility with `black` and other config.
# Source: https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#pylint
[pylint]
max-line-length = 120
disable = R, C
enable = useless-suppression
generated-members = torch.*
extension-pkg-whitelist = pydantic

[pylint.messages_control]
disable = C0330, C0326, fixme, c-extension-no-member

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.3.1
package = tempor
extensions =
    markdown
    no_skeleton
    pre_commit
